"""add username column

Revision ID: c6119d938dfd
Revises: 
Create Date: 2025-05-01 15:54:15.348484

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c6119d938dfd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # First, drop all foreign key constraints to allow dropping tables in any order
    op.execute("ALTER TABLE IF EXISTS shipment_alerts DROP CONSTRAINT IF EXISTS shipment_alerts_event_id_fkey")
    op.execute("ALTER TABLE IF EXISTS shipment_alerts DROP CONSTRAINT IF EXISTS shipment_alerts_resolved_by_fkey")
    op.execute("ALTER TABLE IF EXISTS shipment_alerts DROP CONSTRAINT IF EXISTS shipment_alerts_shipment_id_fkey")
    
    op.execute("ALTER TABLE IF EXISTS alert_subscriptions DROP CONSTRAINT IF EXISTS alert_subscriptions_organization_id_fkey")
    op.execute("ALTER TABLE IF EXISTS alert_subscriptions DROP CONSTRAINT IF EXISTS alert_subscriptions_user_id_fkey")
    
    op.execute("ALTER TABLE IF EXISTS audit_logs DROP CONSTRAINT IF EXISTS audit_logs_organization_id_fkey")
    op.execute("ALTER TABLE IF EXISTS audit_logs DROP CONSTRAINT IF EXISTS audit_logs_user_id_fkey")
    
    op.execute("ALTER TABLE IF EXISTS blockchain_transactions DROP CONSTRAINT IF EXISTS blockchain_transactions_user_id_fkey")
    
    op.execute("ALTER TABLE IF EXISTS bridge_transactions DROP CONSTRAINT IF EXISTS bridge_transactions_bridge_id_fkey")
    
    op.execute("ALTER TABLE IF EXISTS shipment_documents DROP CONSTRAINT IF EXISTS shipment_documents_document_id_fkey")
    op.execute("ALTER TABLE IF EXISTS shipment_documents DROP CONSTRAINT IF EXISTS shipment_documents_shipment_id_fkey")
    
    op.execute("ALTER TABLE IF EXISTS shipment_events DROP CONSTRAINT IF EXISTS shipment_events_organization_id_fkey")
    op.execute("ALTER TABLE IF EXISTS shipment_events DROP CONSTRAINT IF EXISTS shipment_events_shipment_id_fkey")
    op.execute("ALTER TABLE IF EXISTS shipment_events DROP CONSTRAINT IF EXISTS shipment_events_user_id_fkey")
    
    op.execute("ALTER TABLE IF EXISTS shipment_items DROP CONSTRAINT IF EXISTS shipment_items_shipment_id_fkey")
    
    op.execute("ALTER TABLE IF EXISTS shipments DROP CONSTRAINT IF EXISTS shipments_organization_id_fkey")
    
    op.execute("ALTER TABLE IF EXISTS alert_rules DROP CONSTRAINT IF EXISTS alert_rules_organization_id_fkey")
    
    op.execute("ALTER TABLE IF EXISTS alerts DROP CONSTRAINT IF EXISTS alerts_resolved_by_id_fkey")
    op.execute("ALTER TABLE IF EXISTS alerts DROP CONSTRAINT IF EXISTS alerts_user_id_fkey")
    
    op.execute("ALTER TABLE IF EXISTS api_keys DROP CONSTRAINT IF EXISTS api_keys_user_id_fkey")
    
    op.execute("ALTER TABLE IF EXISTS refresh_tokens DROP CONSTRAINT IF EXISTS refresh_tokens_user_id_fkey")
    
    op.execute("ALTER TABLE IF EXISTS users DROP CONSTRAINT IF EXISTS users_organization_id_fkey")
    
    # Now proceed with dropping tables
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_blockchain_configs_id', table_name='blockchain_configs')
    op.drop_table('blockchain_configs')
    op.drop_index('ix_shipment_events_blockchain_tx_hash', table_name='shipment_events')
    op.drop_index('ix_shipment_events_id', table_name='shipment_events')
    op.drop_table('shipment_events')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_alerts_id', table_name='alerts')
    op.drop_table('alerts')
    op.drop_index('ix_alert_rules_id', table_name='alert_rules')
    op.drop_table('alert_rules')
    op.drop_index('ix_refresh_tokens_id', table_name='refresh_tokens')
    op.drop_index('ix_refresh_tokens_token', table_name='refresh_tokens')
    op.drop_table('refresh_tokens')
    op.drop_index('ix_api_keys_id', table_name='api_keys')
    op.drop_index('ix_api_keys_key', table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_index('ix_blockchain_transactions_id', table_name='blockchain_transactions')
    op.drop_index('ix_blockchain_transactions_tx_hash', table_name='blockchain_transactions')
    op.drop_table('blockchain_transactions')
    op.drop_index('ix_shipments_blockchain_tx_hash', table_name='shipments')
    op.drop_index('ix_shipments_id', table_name='shipments')
    op.drop_index('ix_shipments_tracking_number', table_name='shipments')
    op.drop_table('shipments')
    op.drop_index('ix_bridge_transactions_id', table_name='bridge_transactions')
    op.drop_table('bridge_transactions')
    op.drop_index('ix_documents_blockchain_tx_hash', table_name='documents')
    op.drop_index('ix_documents_id', table_name='documents')
    op.drop_table('documents')
    op.drop_index('ix_audit_logs_id', table_name='audit_logs')
    op.drop_index('ix_audit_logs_request_id', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index('ix_oracles_id', table_name='oracles')
    op.drop_table('oracles')
    op.drop_index('ix_shipment_alerts_id', table_name='shipment_alerts')
    op.drop_table('shipment_alerts')
    op.drop_index('ix_shipment_items_id', table_name='shipment_items')
    op.drop_table('shipment_items')
    op.drop_table('shipment_documents')
    op.drop_index('ix_bridges_id', table_name='bridges')
    op.drop_table('bridges')
    op.drop_index('ix_alert_subscriptions_id', table_name='alert_subscriptions')
    op.drop_table('alert_subscriptions')
    op.drop_index('ix_organizations_id', table_name='organizations')
    op.drop_table('organizations')
    # Now add the 'username' column to Users table
    # Create users table with username column
    op.create_table('users',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('username', sa.String(), nullable=True),  # New username column
        sa.Column('hashed_password', sa.String(), nullable=False),
        sa.Column('full_name', sa.String(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False, default=True),
        sa.Column('role', sa.String(), nullable=False),
        sa.Column('organization_id', sa.UUID(), nullable=True),
        sa.Column('wallet_address', sa.String(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Just drop the username column from users table
    op.drop_index('ix_users_username', table_name='users')
    op.drop_column('users', 'username')
    # ### end Alembic commands ###
